 Parte 1 – Funções de Caracteres, Números e Datas (Seção 4)

1. Exiba os nomes dos clientes com todas as letras em maiúsculas.
SELECT UPPER(nome) AS nome_maiusculo FROM clientes;

 2. Exiba os nomes dos clientes formatados com apenas a primeira letra maiúscula.
SELECT INITCAP(nome) AS nome_formatado FROM clientes;

 3. Mostre as três primeiras letras do nome de cada cliente.
SELECT SUBSTR(nome, 1, 3) AS iniciais FROM clientes;

 4. Exiba o número de caracteres do nome de cada cliente.
SELECT nome, LENGTH(nome) AS qtd_caracteres FROM clientes;

 5. Apresente o saldo de todas as contas, arredondado para o inteiro mais próximo.
SELECT numero_conta, ROUND(saldo) AS saldo_arredondado FROM contas;

 6. Exiba o saldo truncado, sem casas decimais.
SELECT numero_conta, TRUNC(saldo) AS saldo_truncado FROM contas;

 7. Mostre o resto da divisão do saldo da conta por 1000.
SELECT numero_conta, MOD(saldo, 1000) AS resto_divisao FROM contas;

 8. Exiba a data atual do servidor do banco.
SELECT CURRENT_DATE AS data_atual FROM dual;

 9. Adicione 30 dias à data atual e exiba como "Data de vencimento simulada".
SELECT CURRENT_DATE + 30 AS data_vencimento_simulada FROM dual;

 10. Exiba o número de dias entre a data de abertura da conta e a data atual.
SELECT numero_conta, CURRENT_DATE - data_abertura AS dias_entre_datas FROM contas;


-- Parte 2 – Conversão de Dados e Tratamento de Nulos (Seção 5)

-- 11. Apresente o saldo de cada conta formatado como moeda local.
SELECT numero_conta, TO_CHAR(saldo, 'L999G999D99') AS saldo_formatado FROM contas;

12. Converta a data de abertura da conta para o formato 'dd/mm/yyyy'.
SELECT numero_conta, TO_CHAR(data_abertura, 'DD/MM/YYYY') AS data_formatada FROM contas;

13. Exiba o saldo da conta e substitua valores nulos por 0.
SELECT numero_conta, NVL(saldo, 0) AS saldo_tratado FROM contas;

 14. Exiba os nomes dos clientes e substitua valores nulos na cidade por 'Sem cidade'.
SELECT nome, NVL(cidade, 'Sem cidade') AS cidade FROM clientes;

 15. Classifique os clientes em grupos com base em sua cidade.
SELECT nome,
    CASE 
        WHEN cidade = 'Niterói' THEN 'Região Metropolitana'
        WHEN cidade = 'Resende' THEN 'Interior'
        ELSE 'Outra Região'
    END AS regiao
FROM clientes;


 Parte 3 – Junções entre Tabelas (Seção 6)

 16. Exiba o nome de cada cliente, o número da conta e o saldo correspondente.
SELECT c.nome, ct.numero_conta, ct.saldo
FROM clientes c
JOIN contas ct ON c.codigo = ct.codigo_cliente;

 17. Liste os nomes dos clientes e os nomes das agências onde mantêm conta.
SELECT c.nome, a.nome_agencia
FROM clientes c
JOIN contas ct ON c.codigo = ct.codigo_cliente
JOIN agencias a ON ct.codigo_agencia = a.codigo_agencia;

 18. Mostre todas as agências, mesmo aquelas que não possuem clientes vinculados (junção externa esquerda).
SELECT a.nome_agencia, c.nome
FROM agencias a
LEFT JOIN contas ct ON a.codigo_agencia = ct.codigo_agencia
LEFT JOIN clientes c ON ct.codigo_cliente = c.codigo;
